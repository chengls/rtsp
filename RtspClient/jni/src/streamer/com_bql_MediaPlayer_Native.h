/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for android streamuser */

#ifndef __COM_BQL_STREAMER_NATIVE__
#define __COM_BQL_STREAMER_NATIVE__

/*
 * Class:     BufferManager
 * Method:    native_malloc
 */
JNIEXPORT jlong    JNICALL Java_com_bql_Malloc(JNIEnv *env, jobject thiz, jstring jcfg, jstring jpkg);

/*
 * Class:     BufferManager
 * Method:    native_free
 */
JNIEXPORT void     JNICALL Java_com_bql_Free(JNIEnv *env, jobject thiz, jlong ctx);

////////////////////////////////////////////////////////////////////////
/*
 * Class:     MediaPlayer
 * Method:    native_setup
 */
JNIEXPORT jlong    JNICALL Java_com_bql_CreatePlayer(JNIEnv *env, jobject thiz, jlong ctx, jobject obj, jstring juri);

/*
 * Class:     MediaPlayer
 * Method:    native_setParams
 */
JNIEXPORT jboolean JNICALL Java_com_bql_SetParamConfig(JNIEnv *env, jobject thiz, jlong ctx, jstring val);

/*
 * Class:     MediaPlayer
 * Method:    native_setHardwareDecode
 */
JNIEXPORT void     JNICALL Java_com_bql_SetHardwareDecode(JNIEnv *env, jobject thiz, jlong ctx, jint mode);
/*
 * Class:     MediaPlayer
 * Method:    native_setDisplay
 */
JNIEXPORT jboolean JNICALL Java_com_bql_SetSurfaceWindows(JNIEnv *env, jobject thiz, jlong ctx, jobject objSurface);

/*
 * Class:     MediaPlayer
 * Method:    native_setVolume
 */
JNIEXPORT jboolean JNICALL Java_com_bql_SetVolume(JNIEnv *env, jobject thiz, jlong ctx, jfloat a, jfloat b);

/*
 * Class:     MediaPlayer
 * Method:    native_setMute
 */
JNIEXPORT jboolean JNICALL Java_com_bql_SetMute(JNIEnv *env, jobject thiz, jlong ctx, jboolean mute);

/*
 * Class:     MediaPlayer
 * Method:    native_prepareAsync
 */
JNIEXPORT void     JNICALL Java_com_bql_PrepareAsync(JNIEnv *env, jobject thiz, jlong ctx);

/*
 * Class:     MediaPlayer
 * Method:    native_setData
 */
JNIEXPORT void     JNICALL Java_com_bql_Subscribe(JNIEnv * env, jobject thiz, jlong ctx, jint data_type, jboolean isON);

/*
 * Class:     MediaPlayer
 * Method:    native_getDuration
 */
JNIEXPORT jint     JNICALL Java_com_bql_GetDuration(JNIEnv *env, jobject thiz, jlong ctx);

/*
 * Class:     MediaPlayer
 * Method:    native_getCurrentPosition
 */
JNIEXPORT jint     JNICALL Java_com_bql_GetPosition(JNIEnv *env, jobject thiz, jlong ctx);

/*
 * Class:     MediaPlayer
 * Method:    native_getVideoWidth
 */
JNIEXPORT jint     JNICALL Java_com_bql_GetVideoWidth(JNIEnv *env, jobject thiz, jlong ctx);

/*
 * Class:     MediaPlayer
 * Method:    native_getVideoHeight
 */
JNIEXPORT jint     JNICALL Java_com_bql_GetVideoHeight(JNIEnv *env, jobject thiz, jlong ctx);

/*
 * Class:     MediaPlayer
 * Method:    native_getAudioChannel
 */
JNIEXPORT jint     JNICALL Java_com_bql_GetAudioChannels(JNIEnv *env, jobject thiz, jlong ctx);

/*
 * Class:     MediaPlayer
 * Method:    native_getAudioDepth
 */
JNIEXPORT jint     JNICALL Java_com_bql_GetAudioDepth(JNIEnv *env, jobject thiz, jlong ctx);

/*
 * Class:     MediaPlayer
 * Method:    native_getAudioSampleRate
 */
JNIEXPORT jint     JNICALL Java_com_bql_GetAudioSampleRate(JNIEnv *env, jobject thiz, jlong ctx);

/*
 * Class:     MediaPlayer
 * Method:    native_getPlayBufferTime
 */
JNIEXPORT jint     JNICALL Java_com_bql_GetPlayBufferTime(JNIEnv *env, jobject thiz, jlong ctx);

/*
 * Class:     MediaPlayer
 * Method:    native_setPlayBufferTime
 */
JNIEXPORT jboolean JNICALL Java_com_bql_SetPlayBufferTime(JNIEnv *env, jobject thiz, jlong ctx, jint time);

/*
 * Class:	  MediaPlayer
 * Method:	  native_snapshot
 */
JNIEXPORT jboolean JNICALL Java_com_bql_Snapshot(JNIEnv *env, jobject thiz, jlong ctx, jint width, jint height, jstring path);

/*
 * Class:     MediaPlayer
 * Method:    native_play
 */
JNIEXPORT jboolean JNICALL Java_com_bql_Play(JNIEnv *env, jobject thiz, jlong ctx);

/*
 * Class:     MediaPlayer
 * Method:    native_pause
 */
JNIEXPORT jboolean JNICALL Java_com_bql_Pause(JNIEnv *env, jobject thiz, jlong ctx);

/*
 * Class:     MediaPlayer
 * Method:    native_seek
 */
JNIEXPORT jboolean JNICALL Java_com_bql_Seek(JNIEnv *env, jobject thiz, jlong ctx, jint seek);

/*
 * Class:     MediaPlayer
 * Method:    native_stop
 */
JNIEXPORT void     JNICALL Java_com_bql_DeletePlayer(JNIEnv *env, jobject thiz, jlong ctx);

////////////////////////////////////////////////////////////////////////
/*
 * Class:     MediaRecorder
 * Method:    native_createRecorder
 */
JNIEXPORT jlong    JNICALL Java_com_bql_CreateRecorder(JNIEnv *env, jobject thiz, jobject obj, jlong ctx, jstring juri, jint vcodecid, jint acodecid);

/*
 * Class:     MediaRecorder
 * Method:    native_setVideoStream
 */
JNIEXPORT jboolean JNICALL Java_com_bql_SetVideoStream(JNIEnv *env, jobject thiz, jlong ctx, jint fps, jint width, jint height, jint qval, jint bitrate);

/*
 * Class:     MediaRecorder
 * Method:    native_setAudioStream
 */
JNIEXPORT jboolean JNICALL Java_com_bql_SetAudioStream(JNIEnv *env, jobject thiz, jlong ctx, jint channels, jint depth, jint samplerate, jint bitrate);

/*
 * Class:     MediaRecorder
 * Method:    native_prepareWrite
 */
JNIEXPORT jboolean JNICALL Java_com_bql_PrepareWrite(JNIEnv *env, jobject thiz, jlong ctx);

/*
 * Class:     MediaRecorder
 * Method:    native_getRecordTime
 */
JNIEXPORT jint     JNICALL Java_com_bql_GetRecordTime(JNIEnv *env, jobject thiz, jlong ctx);

/*
 * Class:     MediaRecorder
 * Method:    native_write
 */
JNIEXPORT jboolean JNICALL Java_com_bql_Write(JNIEnv *env, jobject thiz, jlong ctx, jint codec_id, jlong pts, jlong buf);

/*
 * Class:     MediaRecorder
 * Method:    native_deleteRecorder
 */
JNIEXPORT void     JNICALL Java_com_bql_DeleteRecorder(JNIEnv *env, jobject thiz, jlong ctx);


////////////////////////////////////////////////////////////////////////
/*
 * Class:     MediaPlayer/MediaRecorder
 * Method:    native_acquireBuffer
 */
JNIEXPORT jobject  JNICALL Java_com_bql_AcquireBuffer(JNIEnv *env, jobject thiz, jlong ctx, jint len);

JNIEXPORT jobject  JNICALL Java_com_bql_GetThumbnail(JNIEnv *env, jobject thiz, jstring uri, jint pos, jint fmt, jint w, jint h);

/*
 * Class:     MediaPlayer/MediaRecorder
 * Method:    native_setBufferSize
 */
JNIEXPORT jlong    JNICALL Java_com_bql_SetBufferSize(JNIEnv *env, jobject thiz, jlong ctx, jint len);

/*
 * Class:     MediaPlayer/MediaRecorder
 * Method:    native_releaseBuffer
 */
JNIEXPORT void     JNICALL Java_com_bql_ReleaseBuffer(JNIEnv *env, jobject thiz, jlong ctx);

#endif
